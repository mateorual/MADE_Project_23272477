//Exercise-1:
//	Build an automated data pipeline for the following source:
//		https://opendata.rhein-kreis-neuss.de/api/explore/v2.1/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv?lang=en&timezone=Europe%2FBerlin&use_labels=true&delimiter=%3B
//
//Goal:
//  Write data into a SQLite database called “airports.sqlite”, in the table “airports”
//	Do not save the following columns: Zeitzone, DST, Zeitzonen-Datenbank, geo_punkt
//	Assign fitting built-in SQLite types (e.g., BIGINT, TEXT or FLOAT) to all columns
//  Do not rename column names
//  No further data validation is required, do not drop any rows or change any data points
//  Use Jayvee version 0.6.3


pipeline AirportsPipeline {

    // Pipeline structure
    AirportsExtractor
        -> AirportsTextFileInterpreter
        -> AirportsCSVInterpreter
        -> AirportsTableInterpreter
        -> AirportsLoader;

    // BLOCK DEFINITONS
    // 1. Get CSV file: HttpExtractor = Input:None -> Output:File
    block AirportsExtractor oftype HttpExtractor{
        url: "https://opendata.rhein-kreis-neuss.de/api/explore/v2.1/catalog/datasets/rhein-kreis-neuss-flughafen-weltweit/exports/csv?lang=en&timezone=Europe%2FBerlin&use_labels=true&delimiter=%3B";
    }

    // 2. TextFileInterpreter = Input:File -> Output:TextFile
    block AirportsTextFileInterpreter oftype TextFileInterpreter{}

    // 3. CSVInterpreter = Input:TextFile -> Output:Sheet
    block AirportsCSVInterpreter oftype CSVInterpreter{
        delimiter: ";";
    }

    // 4. Table Interpreter = Input:Sheet -> Output:Table
    block AirportsTableInterpreter oftype TableInterpreter{
        header: true;
        columns: [
            "Lfd. Nummer" oftype integer,
            "Name des Flughafens" oftype text,
            "Ort" oftype text,
            "Land" oftype text,
            "IATA" oftype text,
            "ICAO" oftype text,
            "Latitude" oftype decimal,
            "Longitude" oftype decimal,
            "Altitude" oftype integer
		];
    }

    // 5. Generate the SQLITE database: SQLiteLoader = Input:Table -> Output:Database 
    block AirportsLoader oftype SQLiteLoader {
        table: "airports";
        file: "./airports.sqlite";
    }


}